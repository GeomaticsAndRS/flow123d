#########################################################################################
# Template for project Flow123d - DEVELOPER BUILDS
#########################################################################################


# defaults values
- defaults:
    name: flow123d-build
    node: "{platform}"
    workspace: "F123-{platform}-{build-type}"
    # TODO log rotate 200 days
    wrappers:
      - build-name:
          name:  "${{PROPFILE,file=\"prop.file\",property=\"BUILD_NAME\"}}  #${{BUILD_NUMBER}}"

- project:
    name: "Multijob project {build-type}"
    platform: ci2runner
    build-type: debug
    jobs:
      - "Flow123d-{platform}-{build-type}-install-image"
      - "Flow123d-{platform}-{build-type}-start-image-a"
      - "Flow123d-{platform}-{build-type}-configure-image-a"
      - "Flow123d-{platform}-{build-type}-build-image-a"
      - "Flow123d-{platform}-{build-type}-package-image-a"
      - "Flow123d-{platform}-{build-type}-stop-image-a"
      - "Flow123d-{platform}-{build-type}-start-image-b"
      - "Flow123d-{platform}-{build-type}-copy-image-b"
      - "Flow123d-{platform}-{build-type}-create-install-image-b"
      - "Flow123d-{platform}-{build-type}-stop-image-b"
      - "Flow123d-{platform}-{build-type}-multijob-package"

# ---------------------------------------------------------------------------- #
# ---------- INSTALL IMAGE --------------------------------------------------- #
# ---------------------------------------------------------------------------- #
- job-template:
    name: "Flow123d-{platform}-{build-type}-install-image"
    display-name: "{build-type} / Flow123d install image"
    defaults: flow123d-build
    builders:
      - inject:
          properties-file: prop.file
      - shell: |
          whoami
          ls -la
          pwd
          cd flow123d
          make initialize-submodules
          git submodule update bin/docker
          cd bin/docker/bin
          ./configure --yes-to-all --do-not-override
          echo ${{_GIT_BRANCH}}


# ---------------------------------------------------------------------------- #
# ---------- START IMAGE A --------------------------------------------------- #
# ---------------------------------------------------------------------------- #
- job-template:
    name: "Flow123d-{platform}-{build-type}-start-image-a"
    display-name: "{build-type} / Flow123d start image A"
    defaults: flow123d-build
    builders:
      - inject:
          properties-file: prop.file
      - shell: |
          rm -f /tmp/docker_test_build.cid
          docker run -tid  --cidfile /tmp/docker_test_build.cid flow123d/flow-libs-dev-dbg
          docker_pid=`cat /tmp/docker_test_build.cid`
          echo "DOCKER_A_PID=${{docker_pid}}"               >> prop.file
          echo "FLOW=/opt/flow123d/flow123d"                >> prop.file
          echo "PACK_NAME=Flow123d-2.0.0-Linux.tar.gz"      >> prop.file
          echo "PACK_PATH=./Flow123d-2.0.0-Linux.tar.gz"    >> prop.file


# ---------------------------------------------------------------------------- #
# ---------- CONFIGURE IMAGE A ----------------------------------------------- #
# ---------------------------------------------------------------------------- #
- job-template:
    name: "Flow123d-{platform}-{build-type}-configure-image-a"
    display-name: "{build-type} / Flow123d configure image A"
    defaults: flow123d-build
    builders:
      - inject:
          properties-file: prop.file
      - shell: |
          docker exec ${{DOCKER_A_PID}} git clone -b ${{_GIT_BRANCH}} https://github.com/jbrezmorf/flow123d.git ${{FLOW}}
          docker exec ${{DOCKER_A_PID}} cp ${{FLOW}}/config/config-jenkins-docker-{build-type}.cmake ${{FLOW}}/config.cmake
          docker exec ${{DOCKER_A_PID}} make -C ${{FLOW}} cmake


# ---------------------------------------------------------------------------- #
# ---------- BUILD IMAGE A --------------------------------------------------- #
# ---------------------------------------------------------------------------- #
- job-template:
    name: "Flow123d-{platform}-{build-type}-build-image-a"
    display-name: "{build-type} / Flow123d build image A"
    defaults: flow123d-build
    builders:
      - inject:
          properties-file: prop.file
      - shell: |
          docker exec ${{DOCKER_A_PID}} make -C ${{FLOW}} -j4 all


# ---------------------------------------------------------------------------- #
# ---------- PACKAGE IMAGE A ------------------------------------------------- #
# ---------------------------------------------------------------------------- #
- job-template:
    name: "Flow123d-{platform}-{build-type}-package-image-a"
    display-name: "{build-type} / Flow123d package image A"
    defaults: flow123d-build
    builders:
      - inject:
          properties-file: prop.file
      - shell: |
          docker exec ${{DOCKER_A_PID}} make -C ${{FLOW}} -j4 package
          docker cp   ${{DOCKER_A_PID}}:${{FLOW}}/build_tree/${{PACK_NAME}} ${{PACK_PATH}}


# ---------------------------------------------------------------------------- #
# ---------- STOP IMAGE A ---------------------------------------------------- #
# ---------------------------------------------------------------------------- #
- job-template:
    name: "Flow123d-{platform}-{build-type}-stop-image-a"
    display-name: "{build-type} / Flow123d stop image A"
    defaults: flow123d-build
    builders:
      - inject:
          properties-file: prop.file
      - shell: |
          docker stop ${{DOCKER_A_PID}}
          docker rm   ${{DOCKER_A_PID}}




# ---------------------------------------------------------------------------- #
# ---------- START IMAGE B --------------------------------------------------- #
# ---------------------------------------------------------------------------- #
- job-template:
    name: "Flow123d-{platform}-{build-type}-start-image-b"
    display-name: "{build-type} / Flow123d start image B"
    defaults: flow123d-build
    builders:
      - inject:
          properties-file: prop.file
      - shell: |
          rm -f /tmp/docker_test_install.cid
          docker run -tid  --cidfile /tmp/docker_test_install.cid flow123d/install
          docker_pid=`cat /tmp/docker_test_install.cid`
          echo "DOCKER_B_PID=${{docker_pid}}"  >> prop.file


# ---------------------------------------------------------------------------- #
# ---------- COPY IMAGE B ---------------------------------------------------- #
# ---------------------------------------------------------------------------- #
- job-template:
    name: "Flow123d-{platform}-{build-type}-copy-image-b"
    display-name: "{build-type} / Flow123d copy image B"
    defaults: flow123d-build
    builders:
      - inject:
          properties-file: prop.file
      - shell: |
            docker   cp ${{PACK_PATH}} ${{DOCKER_B_PID}}:/tmp/${{PACK_NAME}}
            docker exec ${{DOCKER_B_PID}} mkdir -p ${{FLOW}}
            docker exec ${{DOCKER_B_PID}} tar -xvzf /tmp/${{PACK_NAME}} -C ${{FLOW}} --strip-components=1
            docker exec ${{DOCKER_B_PID}} rm -f /tmp/${{PACK_NAME}}

# ---------------------------------------------------------------------------- #
# ---------- CREATE INSTALL B ---------------------------------------------------- #
# ---------------------------------------------------------------------------- #
- job-template:
    name: "Flow123d-{platform}-{build-type}-create-install-image-b"
    display-name: "{build-type} / Flow123d create install image B"
    defaults: flow123d-build
    builders:
      - inject:
          properties-file: prop.file
      - shell: |
            docker export ${{DOCKER_B_PID}} > flow123d.install.tar.gz

# ---------------------------------------------------------------------------- #
# ---------- STOP IMAGE B ---------------------------------------------------- #
# ---------------------------------------------------------------------------- #
- job-template:
    name: "Flow123d-{platform}-{build-type}-stop-image-b"
    display-name: "{build-type} / Flow123d stop image B"
    defaults: flow123d-build
    builders:
      - inject:
          properties-file: prop.file
      - shell: |
          docker stop ${{DOCKER_B_PID}}
          docker rm   ${{DOCKER_B_PID}}


# ---------------------------------------------------------------------------- #
# ---------- MULTIJOB -------------------------------------------------------- #
# ---------------------------------------------------------------------------- #
- job-template:
    name: "Flow123d-{platform}-{build-type}-multijob-package"
    display-name: "{build-type} / Flow123d multijob package"
    project-type: multijob
    defaults: flow123d-build
    properties:
      - raw:
          xml: |
            <hudson.model.ParametersDefinitionProperty>
              <parameterDefinitions>
                <hudson.model.StringParameterDefinition>
                  <name>BRANCH_NAME</name>
                  <description>Specify branch name you want to build. Default value will build master branch.</description>
                  <defaultValue>$GIT_BRANCH</defaultValue>
                </hudson.model.StringParameterDefinition>
              </parameterDefinitions>
            </hudson.model.ParametersDefinitionProperty>
    block-downstream: yes
    scm:
      - git:
          url: https://github.com/jbrezmorf/flow123d.git
          branches:
              - origin/master
          basedir: flow123d
          browser: githubweb
          browser-url: https://github.com/jbrezmorf/flow123d/
          skip-tag: true

    wrappers:
      - inject:
          script-content: |
            rm -f prop.file && touch prop.file
            echo "BUILD_NAME=${{BRANCH_NAME#origin/}}@${{GIT_COMMIT:0:6}}" >> prop.file
            echo "_GIT_BRANCH=${{BRANCH_NAME#origin/}}"                    >> prop.file
            
      - build-name:
          name:  "${{PROPFILE,file=\"prop.file\",property=\"_GIT_BRANCH\"}}@${{GIT_REVISION, length=6}} #${{BUILD_NUMBER}}"

    triggers:
      - github

    builders:
      - multijob:
          name: "Install image"
          condition: SUCCESSFUL
          projects:
            - name: "Flow123d-{platform}-{build-type}-install-image"

      - multijob:
          name: "Start image A"
          condition: SUCCESSFUL
          projects:
            - name: "Flow123d-{platform}-{build-type}-start-image-a"

      - multijob:
          name: "Configure image A"
          condition: SUCCESSFUL
          projects:
            - name: "Flow123d-{platform}-{build-type}-configure-image-a"

      - multijob:
          name: "Build image A"
          condition: SUCCESSFUL
          projects:
            - name: "Flow123d-{platform}-{build-type}-build-image-a"

      - multijob:
          name: "Package image A"
          condition: SUCCESSFUL
          projects:
            - name: "Flow123d-{platform}-{build-type}-package-image-a"

      - multijob:
          name: "Stop image A"
          condition: COMPLETED
          projects:
            - name: "Flow123d-{platform}-{build-type}-stop-image-a"


      - multijob:
          name: "Start image B"
          condition: SUCCESSFUL
          projects:
            - name: "Flow123d-{platform}-{build-type}-start-image-b"

      - multijob:
          name: "Copy image B"
          condition: SUCCESSFUL
          projects:
            - name: "Flow123d-{platform}-{build-type}-copy-image-b"

      - multijob:
          name: "Create install image B"
          condition: SUCCESSFUL
          projects:
            - name: "Flow123d-{platform}-{build-type}-create-install-image-b"

      - multijob:
          name: "Stop image B"
          condition: COMPLETED
          projects:
            - name: "Flow123d-{platform}-{build-type}-stop-image-b"
