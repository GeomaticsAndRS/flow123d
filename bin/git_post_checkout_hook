#!/bin/bash

# Function:
# Check that ./build_tree link points to the build tree of actual branch and possibly fix this.
# Ends with error code 1 when link has been changed.
#
# This script assumes it is started from root directory of the source tree.


# get standard parameters
PREVIOUS_HEAD=$1                # hash
NEW_HEAD=$2                     # hash
BRANCH_CHECKOUT_FLAG=$3         # 1-checkout branch / 0-checkout file




NEW_BRANCH=`git rev-parse --abbrev-ref HEAD`
BUILD_DIR=`pwd`/../build-${NEW_BRANCH}

LS=`ls -l build_tree`
BUILD_TREE=${LS##* -> }
OLD_BRANCH=${BUILD_TREE##*/build-}


echo ""
echo "POST-CHECKOUT(${OLD_BRANCH} -> ${NEW_BRANCH}):"

# check that link is not OK
if [ ! "${OLD_BRANCH}" == "${NEW_BRANCH}" ]
then
  if [ ! -d ${BUILD_DIR} ]
  then
    echo "Possibly new branch, copy build tree from the previous one."
    mkdir -p ${BUILD_DIR}
    cp -r build_tree/* ${BUILD_DIR}  
  fi

  echo "setting build_tree -> ${BUILD_DIR}"
  rm build_tree
  ln -s ${BUILD_DIR} build_tree
  
  exit 1
fi  

exit 0
