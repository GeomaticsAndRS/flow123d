% Various macros and environments for Flow123d manual
\RequirePackage{lmodern}
\RequirePackage{xstring}
\RequirePackage{textcomp}
\RequirePackage{etoolbox}
\RequirePackage[backref]{hyperref}   % hypertext capabilities, should by last package
\hypersetup{colorlinks=true, linkcolor=blue, raiselinks=true}  %setup hyperef package

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%5
%%%%%% USAGE OF HYPERLINK MACROS %%%%%%

% * use the \hyperA link if you want to create bidirectional link which will create target where
%   \hyperA is placed. 
%   Typical usage: I want to link 'conductivity' in mathematical description to its record in automatically
%   generated part (that is B target).
%   Remember: \hyperA should be used only once!
%             The link back from the B target to target A will always point the first appearance of \hyperA.
%
% * do not use \hyperB. 
%   This is used in automatically generated part to create B targets which can be then linked.
%
% * use \Alink if you want to reference B target but not created the back link
%   Typical usage: I link 'conductivity' in tutorial to its record in automatically generated part,
%   but I do not want the back link. (I want the back link to point to mathematical description)
%

% define a target command to check that target is defined 
\def\RegisterTarget#1{%
    \expandafter\gdef\csname #1\endcsname{}%
}
% replacement for \hypertarget that scroll to correct line
\def\HTRaised#1{%
    \RegisterTarget{#1}%
    \raisebox{\ht\strutbox}{%
        \hypertarget{#1}{}%
    }%
}
% macros for bidirect links A<->B
\def\hyperA#1#2{%
    \HTRaised{#1::A}{}%
    \hyperlink{#1::B}{#2}%
}
\def\hyperB#1#2{%
    \HTRaised{#1::B}{}%
    \ifcsdef{#1::A}{%
        \hyperlink{#1::A}{#2}%
    }% 
    {#2}%
}
\def\Alink#1#2{%
    %not setting the back target
    \hyperlink{#1::B}{#2}%
}

%monospace font, used for key to type links
\def\TypeLink#1#2{%
    %not setting the back target
    \hyperlink{#1::B}{{\tt #2}}%
}

%%
% #1 - index entry using ":" instead of "!" for subentries
% #2 - type, e.g. record, first leter is extracted and placed in the index
\newcommand{\IndexEntry}[2]{%
    \noexpandarg
    \StrSubstitute{#1}{:}{!}[\indexstr]%
    \StrLeft{#2}{1}[\firstletter]
    \newcommand{\Firstletter}{\expandafter\uppercase{\firstletter}}
    %{\indexstr{} (#2)}
    \index{\indexstr{} [\Firstletter]}
    %\index{#1 (#2)}
}
\indexsetup{othercode=\ttfamily}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% macro for units 
\def\UNIT#1#2{\ifstrempty{#2}{}{%
\ifstrequal{#2}{1}{\mathrm{#1}}{\mathrm{#1}^{#2}}%
}}
\def\units#1#2#3{\ifstrempty{#1#2#3}{$[-]$}{$[ \UNIT{kg}{#1}\UNIT{m}{#2}\UNIT{s}{#3} ]$}}	%with brackets
\def\unitss#1#2#3{\ifstrempty{#1#2#3}{$-$}{$ \UNIT{kg}{#1}\UNIT{m}{#2}\UNIT{s}{#3} $}}	%without brackets

%%%%%%%%%%%%%%%%%%%%
% Double rule - should avoid pagebreak between rules
\newcommand{\DoubleRule}{%
    \hrule width \hsize \kern 0.3ex \hrule width \hsize %height 2pt 
}


%%%%%%%%%%%%%%%%%%%%%%%%%
%
% #1 - type, e.g. "record"
% #2 - type name
% #3 - link
%
\newcommand{\TypeHead}[3]{
    \par
    \vskip 2ex
    \DoubleRule
    \nopagebreak
    %\vskip 0.2ex
    \nopagebreak
    \noindent%
    {#1}: \IndexEntry{#2}{#1}
    {{\ttfamily\fontseries{b}\selectfont\hyperB{#3}{#2}}}%
    \par%
    \nopagebreak 
    \vskip 1ex
    \nopagebreak
    \DoubleRule
    \vskip 2ex  
}

%\setlength{\itemindent}{-0.5in}

\newenvironment{keyitemize}{%
\begin{itemize}%
\setlength\itemsep{0pt}
\setlength{\itemindent}{-29pt}
\setlength{\leftmargin}{20pt}
\item[]%
\vspace{-2ex}%
}{\end{itemize}%
}

%%%%%%%%%%%%%%
%
%
\newcommand{\ValueDefault}[1]{%
{\ttfamily #1}    
}


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% RecordType environment
%
% usage:
% \begin{RecordType}
%       {<href id>}                     % hyper link target 
%       {<record name>}                 % name of the record, used for header and for hypertarget in form IT::<record name>
%       {<parent abstract record>}      % possible parent abstract record
%       {<default conversion key>}      % possible auto conversion key
%       {< record description>}         % description of the record
%
%       \KeyItem{<name>}                % name of the key
%               {<type>}                % type of the key 
%               {<default value>}       % type of default value and possibly the value itself
%               {<link>}                %  possible hyperlink to hand written text
%               {<key description>}     % description of the key
%       ...
% \end{RecordType}


%%%%
% #1 - list of abstracts
% #2 - automatic conversion Key 
% #3 - description
\newcommand{\RecordTupleCommonBegin}[3]{%
    \setlength{\parindent}{0cm} 
    {#3}%
    \ifstrempty{#1}{}{\par\vspace{1ex}\noindent {\bf implements abstracts:} {\tt #1}}%
    \ifstrempty{#2}{}{\par\vspace{1ex}\noindent {\bf conversion from key:} {\tt #2}}%
    \par
    %\par\noindent%
    %\addtolength{\leftskip}{3em}%
}

%%%%%
% #1 - key target
% #2 - key name
% #3 - type name and link
% #4 - parameters 
% #5 - default value
% #6 - description
%
\newcommand{\RecKey}[6]{%
    %\item
    %\vskip 1ex
    %\hrule%
    %\par\noindent%
    \item[]{\bf\tt \hyperB{#1}{#2}} = {\textlangle {\it #3 }\textrangle}% \hfill \makebox[0.4\textwidth][l]{DEFAULT: {##3}\hfil}%
    \ifstrempty{#4}{}{\par\vspace{1ex}{\it gen. parameters:} {\ttfamily #4}}
    \par\vspace{1ex}
    default: {#5}
    \par\vspace{1ex}
    
    {#6}%
}%

\newenvironment{RecordType}[5]
{
    \TypeHead{record}{#2}{#1}%
    \RecordTupleCommonBegin{#3}{#4}{#5}
    \begin{keyitemize}%
}{%
  \end{keyitemize}  
  \vskip 2ex  
}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% TupleType environment
%
% usage:
% \begin{TupleType}
%       {<record name>}                 % name of the tuple, used for header and for hypertarget in form IT::<record name>
%       {<parent abstract record>}      % possible parent abstract record
%       {<default conversion key>}      % possible auto conversion key
%       {<link>}                        % possible hyperlink into hand written text
%       {< record description>}         % description of the record
%
%       \KeyItem{<name>}                % name of the key
%               {<type>}                % type of the key 
%               {<default value>}       % type of default value and possibly the value itself
%               {<link>}                %  possible hyperlink to hand written text
%               {<key description>}     % description of the key
%       ...
% \end{RecordType}

\newenvironment{TupleType}[5]
{
    \TypeHead{tuple}{#2}{#1}
    \RecordTupleCommonBegin{#3}{#4}{#5}
    \begin{keyitemize}

}{%
  \end{keyitemize}
  \vskip 2ex  
}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% AbstractType environment
%
% usage:
% \begin{AbstractType}
%       {<record name>}
%       {<default descendant>}
%       {<description>}         % Description paragraph of the abstract type.
%       \Descendant{<type name>}
% \end{AbstractType}

\newcommand{\Descendant}[1]{%
    \ifdefempty{\IsFirstDescendant}{%
    \gdef\IsFirstDescendant{!second!}%
    }{\tt, }%
    {\tt #1}%
}


\newenvironment{AbstractType}[4]
{
  \TypeHead{abstract}{#2}{#1}
  \par\noindent
  {#4}%
  \ifstrempty{#3}{}{\par\noindent\bf default: {\tt #3}}%
  {\par\noindent\bf implementations:}%
  \gdef\IsFirstDescendant{}%
  \begin{flushleft}%
}{%
  \end{flushleft}%  
  \vskip 0.7ex
}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% SelectionType environment
%
% usage:
% \begin{SelectionType}
%        {<selection href id>}
%        {<selection name>}
%        {< selection description>}    
%       \KeyItem{<value name>}{<value>}
%       Key value description.
% \end{SelectionType}


\gdef\SelectionItem#1#2#3{%
    \par
    \vskip 0.3ex
    %\hrule%
    \noindent%
    \item[]{\bf\tt \hyperB{#1}{#2}} : { #3 }%%
    \par
}%


\newenvironment{SelectionType}[3]
{
  \TypeHead{selection}{#2}{#1}
  \par\noindent
  {#3}%
  \par\noindent
  {\bf values:}
 \par
  \begin{keyitemize}  
}{%
  \end{keyitemize}
  \vskip 0.7ex  
}
